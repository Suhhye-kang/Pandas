{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import pandasql as ps\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 0. 데이터 불러오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['경매번호', '경매종류', '참여순서', '투자자ID', '투자일시', '투자금액금액', '투자성사여부', '입찰이자율',\n",
      "       '오토비딩', '미투비딩갑', '미투비딩을'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "filepath ='data/'\n",
    "join_kr = pd.read_csv(filepath + 'join.csv', engine='python') ## check if utf-8 encoded CSV\n",
    "print(join_kr.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>경매번호</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>경매종류</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>참여순서</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>투자자ID</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>투자일시</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>투자금액금액</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>투자성사여부</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>입찰이자율</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>오토비딩</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>미투비딩갑</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>미투비딩을</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         0\n",
       "0     경매번호\n",
       "1     경매종류\n",
       "2     참여순서\n",
       "3    투자자ID\n",
       "4     투자일시\n",
       "5   투자금액금액\n",
       "6   투자성사여부\n",
       "7    입찰이자율\n",
       "8     오토비딩\n",
       "9    미투비딩갑\n",
       "10   미투비딩을"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kr_col = pd.DataFrame(join_kr.columns.values)\n",
    "kr_col"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['a_id', 'a_cat', 'order_bid', 'l_id', 'date_bid', 'amnt_bid',\n",
       "       'fundingsuccess', 'rate_bid', 'autobid', 'metoo_a', 'metoo_b'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "join_new = join_kr\n",
    "join_new.columns = ['a_id', 'a_cat', 'order_bid', 'l_id', 'date_bid', 'amnt_bid', 'fundingsuccess', 'rate_bid', 'autobid', 'metoo_a', 'metoo_b']\n",
    "join_new.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>a_id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>a_cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>order_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>l_id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>date_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>amnt_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>fundingsuccess</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>rate_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>autobid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>metoo_a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>metoo_b</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 0\n",
       "0             a_id\n",
       "1            a_cat\n",
       "2        order_bid\n",
       "3             l_id\n",
       "4         date_bid\n",
       "5         amnt_bid\n",
       "6   fundingsuccess\n",
       "7         rate_bid\n",
       "8          autobid\n",
       "9          metoo_a\n",
       "10         metoo_b"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "en_col = pd.DataFrame(join_new.columns.values)\n",
    "en_col"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>경매번호</td>\n",
       "      <td>a_id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>경매종류</td>\n",
       "      <td>a_cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>참여순서</td>\n",
       "      <td>order_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>투자자ID</td>\n",
       "      <td>l_id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>투자일시</td>\n",
       "      <td>date_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>투자금액금액</td>\n",
       "      <td>amnt_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>투자성사여부</td>\n",
       "      <td>fundingsuccess</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>입찰이자율</td>\n",
       "      <td>rate_bid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>오토비딩</td>\n",
       "      <td>autobid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>미투비딩갑</td>\n",
       "      <td>metoo_a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>미투비딩을</td>\n",
       "      <td>metoo_b</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         0               0\n",
       "0     경매번호            a_id\n",
       "1     경매종류           a_cat\n",
       "2     참여순서       order_bid\n",
       "3    투자자ID            l_id\n",
       "4     투자일시        date_bid\n",
       "5   투자금액금액        amnt_bid\n",
       "6   투자성사여부  fundingsuccess\n",
       "7    입찰이자율        rate_bid\n",
       "8     오토비딩         autobid\n",
       "9    미투비딩갑         metoo_a\n",
       "10   미투비딩을         metoo_b"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.concat([kr_col, en_col], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_id</th>\n",
       "      <th>a_cat</th>\n",
       "      <th>order_bid</th>\n",
       "      <th>l_id</th>\n",
       "      <th>date_bid</th>\n",
       "      <th>amnt_bid</th>\n",
       "      <th>fundingsuccess</th>\n",
       "      <th>rate_bid</th>\n",
       "      <th>autobid</th>\n",
       "      <th>metoo_a</th>\n",
       "      <th>metoo_b</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A8C32F3</td>\n",
       "      <td>개인</td>\n",
       "      <td>1</td>\n",
       "      <td>UAEB30A</td>\n",
       "      <td>2007-05-29 8:53</td>\n",
       "      <td>20000</td>\n",
       "      <td>0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A8C32F3</td>\n",
       "      <td>개인</td>\n",
       "      <td>2</td>\n",
       "      <td>U886072</td>\n",
       "      <td>2007-05-28 14:10</td>\n",
       "      <td>20000</td>\n",
       "      <td>0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A8C32F3</td>\n",
       "      <td>개인</td>\n",
       "      <td>3</td>\n",
       "      <td>U8A803C</td>\n",
       "      <td>2007-05-28 14:09</td>\n",
       "      <td>20000</td>\n",
       "      <td>0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A8C32F3</td>\n",
       "      <td>개인</td>\n",
       "      <td>4</td>\n",
       "      <td>U886072</td>\n",
       "      <td>2007-05-28 14:04</td>\n",
       "      <td>20000</td>\n",
       "      <td>0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AAD65CE</td>\n",
       "      <td>개인</td>\n",
       "      <td>1</td>\n",
       "      <td>U4E8DF4</td>\n",
       "      <td>2007-06-01 11:26</td>\n",
       "      <td>20000</td>\n",
       "      <td>0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      a_id a_cat  order_bid     l_id          date_bid  amnt_bid  \\\n",
       "0  A8C32F3    개인          1  UAEB30A   2007-05-29 8:53     20000   \n",
       "1  A8C32F3    개인          2  U886072  2007-05-28 14:10     20000   \n",
       "2  A8C32F3    개인          3  U8A803C  2007-05-28 14:09     20000   \n",
       "3  A8C32F3    개인          4  U886072  2007-05-28 14:04     20000   \n",
       "4  AAD65CE    개인          1  U4E8DF4  2007-06-01 11:26     20000   \n",
       "\n",
       "   fundingsuccess  rate_bid  autobid  metoo_a  metoo_b  \n",
       "0               0      13.0        0        0        0  \n",
       "1               0      20.0        0        0        0  \n",
       "2               0      15.0        0        0        0  \n",
       "3               0      20.0        0        0        0  \n",
       "4               0       7.0        0        0        0  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "join_new.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 245396 entries, 0 to 245395\n",
      "Data columns (total 11 columns):\n",
      "a_id              245396 non-null object\n",
      "a_cat             245396 non-null object\n",
      "order_bid         245396 non-null int64\n",
      "l_id              245396 non-null object\n",
      "date_bid          245396 non-null object\n",
      "amnt_bid          245396 non-null int64\n",
      "fundingsuccess    245396 non-null int64\n",
      "rate_bid          245396 non-null float64\n",
      "autobid           245396 non-null int64\n",
      "metoo_a           245396 non-null int64\n",
      "metoo_b           245396 non-null int64\n",
      "dtypes: float64(1), int64(6), object(4)\n",
      "memory usage: 20.6+ MB\n"
     ]
    }
   ],
   "source": [
    "join_new.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['경매번호', '회차', '기일', '원금', '이자', '잔액', '입금일', '입금원금', '입금이자', '입금후잔액'], dtype='object')\n"
     ]
    }
   ],
   "source": [
    "p2p_refund_kr = pd.read_csv(filepath + 'p2p_refund.csv', engine='python') ## check if utf-8 encoded CSV\n",
    "print(p2p_refund_kr.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['경매번호', '자금모집시작일', '자금모집종료일', '대출자ID', '대출신청금액', '상환기간', '대출자 제시 연 이자율',\n",
      "       '매칭방식', '대출용도', '투자모집 금액', '투자모집 성공여부', '투자참여인원수', '투자모집(오토비드)',\n",
      "       '투자모집(미투비드)', '최종약정이자율', '신용보고서', '소득보고서', '핸드폰번호', '집전화번호', '회사전화번호',\n",
      "       '개인정보서류', '월소득(만원)', '월지출(만원)', '상환후여유자금(만원)', '성별', '나이', '사연길이',\n",
      "       '추가글 개수', '월지출 상세내역', '주거형태', '거주지역', '직종', '직장세부', '혼인상태', '동거인수',\n",
      "       '주거지명의', '차량소유', '개인회생', 'Q&A수 게시물 수'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "p2p_kr = pd.read_csv(filepath + 'p2p.csv', engine='python') ## check if utf-8 encoded CSV\n",
    "print(p2p_kr.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['a_id', 'date_started', 'date_ended', 'b_id', 'amnt_target',\n",
       "       'pymnt_period', 'rate_asking', 'matching_cat', 'loanpurpose_cat',\n",
       "       'amnt_funded', 'fundsuccess', 'num_lender', 'amnt_autobid',\n",
       "       'amnt_metoo', 'rate_contract', 'cert_credit', 'cert_income',\n",
       "       'm_num', 'h_num', 'w_num', 'cert_profile', 'income_m', 'expense_m',\n",
       "       'extra_after_pymnt', 'gender', 'age', 'length_txt', 'num_addtxt',\n",
       "       'expense_desc', 'h_status', 'region', 'e_status', 'e_desc',\n",
       "       'm_status', 'num_cohab', 'h_ownership', 'v_ownership', 'delinq',\n",
       "       'num_qna'], dtype=object)"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p2p_new.columns = ['a_id', 'date_started', 'date_ended', 'b_id', 'amnt_target',\n",
    "       'pymnt_period', 'rate_asking', 'matching_cat', 'loanpurpose_cat',\n",
    "       'amnt_funded', 'fundsuccess', 'num_lender', 'amnt_autobid',\n",
    "       'amnt_metoo', 'rate_contract', 'cert_credit', 'cert_income', 'm_num',\n",
    "       'h_num', 'w_num', 'cert_profile', 'income_m', 'expense_m',\n",
    "       'extra_after_pymnt', 'gender', 'age', 'length_txt', 'num_addtxt',\n",
    "       'expense_desc', 'h_status', 'region', 'e_status', 'e_desc', 'm_status',\n",
    "       'num_cohab', 'h_ownership', 'v_ownership', 'delinq', 'num_qna']\n",
    "p2p_new.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>경매번호</td>\n",
       "      <td>a_id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>자금모집시작일</td>\n",
       "      <td>date_started</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>자금모집종료일</td>\n",
       "      <td>date_ended</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>대출자ID</td>\n",
       "      <td>b_id</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>대출신청금액</td>\n",
       "      <td>amnt_target</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>상환기간</td>\n",
       "      <td>pymnt_period</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>대출자 제시 연 이자율</td>\n",
       "      <td>rate_asking</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>매칭방식</td>\n",
       "      <td>matching_cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>대출용도</td>\n",
       "      <td>loanpurpose_cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>투자모집 금액</td>\n",
       "      <td>amnt_funded</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>투자모집 성공여부</td>\n",
       "      <td>fundsuccess</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>투자참여인원수</td>\n",
       "      <td>num_lender</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>투자모집(오토비드)</td>\n",
       "      <td>amnt_autobid</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>투자모집(미투비드)</td>\n",
       "      <td>amnt_metoo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>최종약정이자율</td>\n",
       "      <td>rate_contract</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>신용보고서</td>\n",
       "      <td>cert_credit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>소득보고서</td>\n",
       "      <td>cert_income</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>핸드폰번호</td>\n",
       "      <td>m_num</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>집전화번호</td>\n",
       "      <td>h_num</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>회사전화번호</td>\n",
       "      <td>w_num</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>개인정보서류</td>\n",
       "      <td>cert_profile</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>월소득(만원)</td>\n",
       "      <td>income_m</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>월지출(만원)</td>\n",
       "      <td>expense_m</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>상환후여유자금(만원)</td>\n",
       "      <td>extra_after_pymnt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>성별</td>\n",
       "      <td>gender</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>나이</td>\n",
       "      <td>age</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>사연길이</td>\n",
       "      <td>length_txt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>추가글 개수</td>\n",
       "      <td>num_addtxt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>월지출 상세내역</td>\n",
       "      <td>expense_desc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>주거형태</td>\n",
       "      <td>h_status</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>거주지역</td>\n",
       "      <td>region</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>직종</td>\n",
       "      <td>e_status</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>직장세부</td>\n",
       "      <td>e_desc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>혼인상태</td>\n",
       "      <td>m_status</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>동거인수</td>\n",
       "      <td>num_cohab</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>주거지명의</td>\n",
       "      <td>h_ownership</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>차량소유</td>\n",
       "      <td>v_ownership</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>개인회생</td>\n",
       "      <td>delinq</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Q&amp;A수 게시물 수</td>\n",
       "      <td>num_qna</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               0                  0\n",
       "0           경매번호               a_id\n",
       "1        자금모집시작일       date_started\n",
       "2        자금모집종료일         date_ended\n",
       "3          대출자ID               b_id\n",
       "4         대출신청금액        amnt_target\n",
       "5           상환기간       pymnt_period\n",
       "6   대출자 제시 연 이자율        rate_asking\n",
       "7           매칭방식       matching_cat\n",
       "8           대출용도    loanpurpose_cat\n",
       "9        투자모집 금액        amnt_funded\n",
       "10     투자모집 성공여부        fundsuccess\n",
       "11       투자참여인원수         num_lender\n",
       "12    투자모집(오토비드)       amnt_autobid\n",
       "13    투자모집(미투비드)         amnt_metoo\n",
       "14       최종약정이자율      rate_contract\n",
       "15         신용보고서        cert_credit\n",
       "16         소득보고서        cert_income\n",
       "17         핸드폰번호              m_num\n",
       "18         집전화번호              h_num\n",
       "19        회사전화번호              w_num\n",
       "20        개인정보서류       cert_profile\n",
       "21       월소득(만원)           income_m\n",
       "22       월지출(만원)          expense_m\n",
       "23   상환후여유자금(만원)  extra_after_pymnt\n",
       "24            성별             gender\n",
       "25            나이                age\n",
       "26          사연길이         length_txt\n",
       "27        추가글 개수         num_addtxt\n",
       "28      월지출 상세내역       expense_desc\n",
       "29          주거형태           h_status\n",
       "30          거주지역             region\n",
       "31            직종           e_status\n",
       "32          직장세부             e_desc\n",
       "33          혼인상태           m_status\n",
       "34          동거인수          num_cohab\n",
       "35         주거지명의        h_ownership\n",
       "36          차량소유        v_ownership\n",
       "37          개인회생             delinq\n",
       "38    Q&A수 게시물 수            num_qna"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.concat([pd.DataFrame(p2p_kr.columns), pd.DataFrame(p2p_new.columns.values)], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 26855 entries, 0 to 26854\n",
      "Data columns (total 39 columns):\n",
      "a_id                 26855 non-null object\n",
      "date_started         26855 non-null object\n",
      "date_ended           26855 non-null object\n",
      "b_id                 26855 non-null object\n",
      "amnt_target          26855 non-null int64\n",
      "pymnt_period         26855 non-null int64\n",
      "rate_asking          26855 non-null float64\n",
      "matching_cat         26855 non-null int64\n",
      "loanpurpose_cat      14437 non-null object\n",
      "amnt_funded          26855 non-null float64\n",
      "fundsuccess          26855 non-null int64\n",
      "num_lender           26855 non-null int64\n",
      "amnt_autobid         26855 non-null int64\n",
      "amnt_metoo           26855 non-null int64\n",
      "rate_contract        26855 non-null float64\n",
      "cert_credit          26855 non-null int64\n",
      "cert_income          26855 non-null int64\n",
      "m_num                26855 non-null int64\n",
      "h_num                26855 non-null int64\n",
      "w_num                26855 non-null int64\n",
      "cert_profile         26855 non-null int64\n",
      "income_m             26855 non-null int64\n",
      "expense_m            26855 non-null float64\n",
      "extra_after_pymnt    26855 non-null int64\n",
      "gender               26855 non-null int64\n",
      "age                  24980 non-null float64\n",
      "length_txt           26855 non-null int64\n",
      "num_addtxt           26855 non-null int64\n",
      "expense_desc         13060 non-null object\n",
      "h_status             14221 non-null object\n",
      "region               24462 non-null object\n",
      "e_status             23321 non-null object\n",
      "e_desc               20230 non-null object\n",
      "m_status             26855 non-null int64\n",
      "num_cohab            26855 non-null int64\n",
      "h_ownership          14180 non-null object\n",
      "v_ownership          26855 non-null int64\n",
      "delinq               26855 non-null int64\n",
      "num_qna              26855 non-null int64\n",
      "dtypes: float64(5), int64(23), object(11)\n",
      "memory usage: 8.0+ MB\n"
     ]
    }
   ],
   "source": [
    "p2p_new.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_id</th>\n",
       "      <th>date_started</th>\n",
       "      <th>date_ended</th>\n",
       "      <th>b_id</th>\n",
       "      <th>amnt_target</th>\n",
       "      <th>pymnt_period</th>\n",
       "      <th>rate_asking</th>\n",
       "      <th>matching_cat</th>\n",
       "      <th>loanpurpose_cat</th>\n",
       "      <th>amnt_funded</th>\n",
       "      <th>...</th>\n",
       "      <th>h_status</th>\n",
       "      <th>region</th>\n",
       "      <th>e_status</th>\n",
       "      <th>e_desc</th>\n",
       "      <th>m_status</th>\n",
       "      <th>num_cohab</th>\n",
       "      <th>h_ownership</th>\n",
       "      <th>v_ownership</th>\n",
       "      <th>delinq</th>\n",
       "      <th>num_qna</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ADBB538</td>\n",
       "      <td>2007-05-28 5:00</td>\n",
       "      <td>2007-06-30 12:00</td>\n",
       "      <td>UE799D6</td>\n",
       "      <td>100</td>\n",
       "      <td>3</td>\n",
       "      <td>25.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>서울 서초구 방배동</td>\n",
       "      <td>일반회사원</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A6C8F3E</td>\n",
       "      <td>2007-05-28 5:21</td>\n",
       "      <td>2007-09-01 12:00</td>\n",
       "      <td>UE799D6</td>\n",
       "      <td>100</td>\n",
       "      <td>12</td>\n",
       "      <td>29.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>서울 서초구 방배동</td>\n",
       "      <td>일반회사원</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A8C32F3</td>\n",
       "      <td>2007-05-28 5:24</td>\n",
       "      <td>2007-09-01 12:00</td>\n",
       "      <td>UE799D6</td>\n",
       "      <td>200</td>\n",
       "      <td>12</td>\n",
       "      <td>29.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>서울 서초구 방배동</td>\n",
       "      <td>일반회사원</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AAD65CE</td>\n",
       "      <td>2007-05-28 9:44</td>\n",
       "      <td>2007-06-01 12:00</td>\n",
       "      <td>UB3D977</td>\n",
       "      <td>100</td>\n",
       "      <td>3</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A22DEE1</td>\n",
       "      <td>2007-05-28 9:57</td>\n",
       "      <td>2007-06-29 12:00</td>\n",
       "      <td>UEA8D32</td>\n",
       "      <td>100</td>\n",
       "      <td>3</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 39 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      a_id     date_started        date_ended     b_id  amnt_target  \\\n",
       "0  ADBB538  2007-05-28 5:00  2007-06-30 12:00  UE799D6          100   \n",
       "1  A6C8F3E  2007-05-28 5:21  2007-09-01 12:00  UE799D6          100   \n",
       "2  A8C32F3  2007-05-28 5:24  2007-09-01 12:00  UE799D6          200   \n",
       "3  AAD65CE  2007-05-28 9:44  2007-06-01 12:00  UB3D977          100   \n",
       "4  A22DEE1  2007-05-28 9:57  2007-06-29 12:00  UEA8D32          100   \n",
       "\n",
       "   pymnt_period  rate_asking  matching_cat loanpurpose_cat  amnt_funded  \\\n",
       "0             3         25.0             1             NaN          0.0   \n",
       "1            12         29.0             1             NaN          0.0   \n",
       "2            12         29.0             1             NaN          0.0   \n",
       "3             3          7.0             1             NaN          0.0   \n",
       "4             3          6.0             1             NaN          0.0   \n",
       "\n",
       "    ...     h_status      region  e_status  e_desc  m_status  num_cohab  \\\n",
       "0   ...          NaN  서울 서초구 방배동     일반회사원     NaN         0          0   \n",
       "1   ...          NaN  서울 서초구 방배동     일반회사원     NaN         0          0   \n",
       "2   ...          NaN  서울 서초구 방배동     일반회사원     NaN         0          0   \n",
       "3   ...          NaN         NaN       NaN     NaN         0          0   \n",
       "4   ...          NaN         NaN       NaN     NaN         0          0   \n",
       "\n",
       "   h_ownership  v_ownership  delinq  num_qna  \n",
       "0          NaN            0       0        0  \n",
       "1          NaN            0       0        0  \n",
       "2          NaN            0       0        0  \n",
       "3          NaN            0       0        6  \n",
       "4          NaN            0       0        7  \n",
       "\n",
       "[5 rows x 39 columns]"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p2p_new.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['투자자ID', '가입일', '페이스북로그인', '성별', '나이', '오토비드사용', '미투비드갑사용', '대부회원 여부'], dtype='object')\n"
     ]
    }
   ],
   "source": [
    "user = pd.read_csv(filepath + 'user.csv', engine='python') ## check if utf-8 encoded CSV\n",
    "print(user.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 1. 현재까지 대출신청된 건이 몇 건인지"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 방법 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26830"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p2p_kr['경매번호'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "16787"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "join_new['a_id'].nunique() # join과 p2p에서의 숫자가 다르다는 것을 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3215"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(np.unique(join_new['a_id'])) # 3215 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.221461897356143"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "16787/3215 # join 데이터에 따르면 경매 신청 건당 (모집 성공 여부 관계없이) 평균 5명의 투자자를 모집하는 것을 알 수 있습니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## 방법2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3185</th>\n",
       "      <td>216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3186</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3187</th>\n",
       "      <td>86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3188</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3189</th>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3190</th>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3191</th>\n",
       "      <td>315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3192</th>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3193</th>\n",
       "      <td>175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3194</th>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3195</th>\n",
       "      <td>166</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3196</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3197</th>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3198</th>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3199</th>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3200</th>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3201</th>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3202</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3203</th>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3204</th>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3205</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3206</th>\n",
       "      <td>103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3207</th>\n",
       "      <td>86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3208</th>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3209</th>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3210</th>\n",
       "      <td>270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3211</th>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3212</th>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3213</th>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3214</th>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3215 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      a_cnt\n",
       "0         1\n",
       "1       104\n",
       "2         6\n",
       "3        45\n",
       "4       136\n",
       "5        98\n",
       "6        50\n",
       "7        39\n",
       "8       177\n",
       "9        12\n",
       "10      193\n",
       "11       56\n",
       "12       56\n",
       "13        6\n",
       "14       57\n",
       "15       51\n",
       "16      152\n",
       "17       14\n",
       "18        5\n",
       "19       24\n",
       "20       22\n",
       "21      150\n",
       "22       95\n",
       "23      100\n",
       "24        1\n",
       "25       52\n",
       "26       25\n",
       "27      216\n",
       "28       65\n",
       "29       51\n",
       "...     ...\n",
       "3185    216\n",
       "3186      8\n",
       "3187     86\n",
       "3188     15\n",
       "3189     75\n",
       "3190     78\n",
       "3191    315\n",
       "3192    138\n",
       "3193    175\n",
       "3194    121\n",
       "3195    166\n",
       "3196      1\n",
       "3197     47\n",
       "3198     74\n",
       "3199     75\n",
       "3200    138\n",
       "3201     54\n",
       "3202      3\n",
       "3203     19\n",
       "3204     88\n",
       "3205      3\n",
       "3206    103\n",
       "3207     86\n",
       "3208     66\n",
       "3209     16\n",
       "3210    270\n",
       "3211     58\n",
       "3212    102\n",
       "3213     74\n",
       "3214     96\n",
       "\n",
       "[3215 rows x 1 columns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ps.sqldf(\"SELECT COUNT(a_id) AS a_cnt FROM join_new GROUP BY a_id;\", globals()) # 3215 rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_cat</th>\n",
       "      <th>cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [a_cat, cnt]\n",
       "Index: []"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ps.sqldf(\"SELECT a_cat, COUNT(a_id) AS cnt FROM join_new WHERE order_bid == 0 GROUP BY 1;\", globals())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_cat</th>\n",
       "      <th>cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>개인</td>\n",
       "      <td>3087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>기업</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  a_cat   cnt\n",
       "0    개인  3087\n",
       "1    기업   128"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 방법 3\n",
    "ps.sqldf(\"SELECT a_cat, COUNT(a_id) AS cnt FROM join_new WHERE order_bid == 1 GROUP BY 1 ;\", globals()) # 카테고리별로 보고 싶어서 나눠보았습니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 아주 간단한 EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sds\\Anaconda3\\lib\\site-packages\\scipy\\stats\\stats.py:1713: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\n",
      "  return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "a_cnt = ps.sqldf(\"SELECT count(a_id) AS a_cnt FROM join_new GROUP BY a_id;\", globals())\n",
    "sns.distplot(a_cnt)\n",
    "plt.xlabel('a_cnt')\n",
    "plt.ylabel('density')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2. 현재까지 대출완료된 건이 몇 건인지"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26830"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "p2p_kr['a_id'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_id</th>\n",
       "      <th>a_cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A2DE5DD</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A2E7199</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A30C9FA</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A3776E6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A3C5F10</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>A43909E</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>A454F74</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>A545120</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>A5A40E6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>A5F31F5</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>A6D0869</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>A80CF57</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>A81049F</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>A96A673</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>AA22511</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>AB9063F</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>AC0D0FC</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>AC2244E</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>ACE6F24</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>AD436AE</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>ADE8EA3</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>ADF4BBA</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>AE3F744</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>AEDA821</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>AF76042</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       a_id  a_cnt\n",
       "0   A2DE5DD      2\n",
       "1   A2E7199      2\n",
       "2   A30C9FA      2\n",
       "3   A3776E6      2\n",
       "4   A3C5F10      2\n",
       "5   A43909E      2\n",
       "6   A454F74      2\n",
       "7   A545120      2\n",
       "8   A5A40E6      2\n",
       "9   A5F31F5      2\n",
       "10  A6D0869      2\n",
       "11  A80CF57      2\n",
       "12  A81049F      2\n",
       "13  A96A673      2\n",
       "14  AA22511      2\n",
       "15  AB9063F      2\n",
       "16  AC0D0FC      2\n",
       "17  AC2244E      2\n",
       "18  ACE6F24      2\n",
       "19  AD436AE      2\n",
       "20  ADE8EA3      2\n",
       "21  ADF4BBA      2\n",
       "22  AE3F744      2\n",
       "23  AEDA821      2\n",
       "24  AF76042      2"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ps.sqldf(\"SELECT a_id, COUNT(a_id) AS a_cnt FROM p2p_new GROUP BY a_id HAVING a_cnt > 1;\", globals()) # 24 duplicates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26855"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "26830+25"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.000930925339787749"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "25 / 26855 # 전체의 0.93% 정도 되므로 이번 태스크에서는 무시하도록 합니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "투자모집 성공여부\n",
       "0    24760\n",
       "1     2095\n",
       "dtype: int64"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 방법 1\n",
    "p2p_kr.groupby('투자모집 성공여부').size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26855"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2095+24760"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.07801154347421337"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2095 / (2095+24760) # 전체 대출경매 신청 중 7% 정도만 모금에 성공하는 아주 치열한 과정임을 알 수 있습니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 방법 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a_cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2065</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2066</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2067</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2068</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2069</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2070</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2071</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2072</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2073</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2074</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2075</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2076</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2077</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2078</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2079</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2080</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2081</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2082</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2083</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2084</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2085</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2086</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2087</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2088</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2089</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2090</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2091</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2092</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2093</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2094</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2095 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      a_cnt\n",
       "0         1\n",
       "1         1\n",
       "2         1\n",
       "3         1\n",
       "4         1\n",
       "5         1\n",
       "6         1\n",
       "7         1\n",
       "8         1\n",
       "9         1\n",
       "10        1\n",
       "11        1\n",
       "12        1\n",
       "13        1\n",
       "14        1\n",
       "15        1\n",
       "16        1\n",
       "17        1\n",
       "18        1\n",
       "19        1\n",
       "20        1\n",
       "21        1\n",
       "22        1\n",
       "23        1\n",
       "24        1\n",
       "25        1\n",
       "26        1\n",
       "27        1\n",
       "28        1\n",
       "29        1\n",
       "...     ...\n",
       "2065      1\n",
       "2066      1\n",
       "2067      1\n",
       "2068      1\n",
       "2069      1\n",
       "2070      1\n",
       "2071      1\n",
       "2072      1\n",
       "2073      1\n",
       "2074      1\n",
       "2075      1\n",
       "2076      1\n",
       "2077      1\n",
       "2078      1\n",
       "2079      1\n",
       "2080      1\n",
       "2081      1\n",
       "2082      1\n",
       "2083      1\n",
       "2084      1\n",
       "2085      1\n",
       "2086      1\n",
       "2087      1\n",
       "2088      1\n",
       "2089      1\n",
       "2090      1\n",
       "2091      1\n",
       "2092      1\n",
       "2093      1\n",
       "2094      1\n",
       "\n",
       "[2095 rows x 1 columns]"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ps.sqldf(\"SELECT COUNT(a_id) AS a_cnt FROM p2p_new WHERE fundsuccess == 1 GROUP BY a_id;\", globals()) # 2095 rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 3. 현재까지 대출기능을 이용한 이용자(차입자)는 몇 명인지"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11163"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(np.unique(p2p_kr['대출자ID'])) #11163"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 4. 현재까지 투자기능을 이용한 이용자(투자자)는 몇 명인지"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6345"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(np.unique(join_new['l_id'])) # 6345"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.759338061465721"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "11163/6345 # 아주 단순히 말해서, 이용회원 1명당 1.75명의 차입자를 도운 셈입니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
